<?xml version="1.0"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>openSUSE 中文社区</title>
    <link></link>
    <description>openSUSE 中文社区主页，为您带来最新的 openSUSE 资讯，为中文用户的交流提供一席之地。</description>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>

    <item>
      <guid>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/31/urgency-to-switch-builds-copy.html</guid>
      <title>环球新闻摘要</title>
      <pubDate>Thu, 31 Jul 2025 23:00:00 +0000</pubDate>
      <link>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/31/urgency-to-switch-builds-copy.html</link>
      <author>Fangzhou Liu</author>
      <description>以下是来自 openSUSE 社区、发布于 planet.opensuse.org 的文章综述。 以下是 7 月 21 日至 27 日社区博客订阅源聚合器上的重点内容精选。其中包括一些最新的博客文章，涉及 2025 年 openSUSE 大会、Tumbleweed 开发的最新动态以及重要的安全见解。 以下是每篇帖子的摘要和链接： openSUSE 2025 大会亮点 openSUSE 2025 大会 —— Ish Sookun 分享了他参加在德国纽伦堡举办的 oSC25 的经历，包括他作为新当选的 openSUSE 董事会成员的视角。此次大会汇集了来自世界各地的开发者、贡献者和开源爱好者。 主要亮点包括：现场设立 openSUSE 商店，方便国际参会者获取周边产品；SUSE 领导层的主题演讲强调开放协作的力量；技术演讲涵盖 SELinux 安全改进、分布式 Kubernetes 集群等主题。此外，Ish 还发表了关于改进 openSUSE 会员管理 以及 在毛里求斯建立镜像站点 的演讲。 Tumbleweed 更新动态 openSUSE Tumbleweed...</description>
      <content:encoded>&lt;p&gt;以下是来自 openSUSE 社区、发布于 &lt;a href=&quot;https://planet.opensuse.org/&quot;&gt;planet.opensuse.org&lt;/a&gt; 的文章综述。&lt;/p&gt;

&lt;p&gt;以下是 7 月 21 日至 27 日社区博客订阅源聚合器上的重点内容精选。其中包括一些最新的博客文章，涉及 2025 年 openSUSE 大会、Tumbleweed 开发的最新动态以及重要的安全见解。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;以下是每篇帖子的摘要和链接：&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;opensuse-2025-大会亮点&quot;&gt;openSUSE 2025 大会亮点&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://sysadmin-journal.com/opensuse-conference-2025/&quot;&gt;openSUSE 2025 大会&lt;/a&gt; —— Ish Sookun 分享了他参加在德国纽伦堡举办的 oSC25 的经历，包括他作为新当选的 openSUSE 董事会成员的视角。此次大会汇集了来自世界各地的开发者、贡献者和开源爱好者。&lt;/p&gt;

&lt;p&gt;主要亮点包括：现场设立 openSUSE 商店，方便国际参会者获取周边产品；SUSE 领导层的主题演讲强调开放协作的力量；技术演讲涵盖 SELinux 安全改进、分布式 Kubernetes 集群等主题。此外，Ish 还发表了关于改进 &lt;a href=&quot;https://youtu.be/iScuu8KjwaA?si=i35AsfesFai-a__2&quot;&gt;openSUSE 会员管理&lt;/a&gt; 以及 &lt;a href=&quot;https://youtu.be/EI1nI3bSYDA?si=vo7cx5g1v1Ei6Z28&quot;&gt;在毛里求斯建立镜像站点&lt;/a&gt; 的演讲。&lt;/p&gt;

&lt;h2 id=&quot;tumbleweed-更新动态&quot;&gt;Tumbleweed 更新动态&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://victorhckinthefreeworld.com/2025/07/25/opensuse-tumbleweed-revision-de-la-semana-30-de-2025/&quot;&gt;openSUSE Tumbleweed 2025 年第 30 周修订版&lt;/a&gt; —— Victorhck 以西班牙语详细回顾了 Tumbleweed 快照 0718、0722 和 0723，并提及因 SELinux 3.9 调试工作导致的延迟。主要更新包括 KDE Plasma 6.4.3、Mesa 25.1.6、Apache 2.4.64 以及 Linux 内核 6.15.7。快照 0724 正在进行质量控制，预计将带来 SELinux 3.9、Bash 5.3 和 Firefox 141.0。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dominique.leuenberger.net/blog/2025/07/tumbleweed-review-of-the-weeks-2025-30/&quot;&gt;Tumbleweed —— 2025 年第 30 周回顾&lt;/a&gt;—— Dominique Leuenberger 对上述提及的 Tumbleweed 快照等内容进行了详细回顾。&lt;/p&gt;

&lt;h2 id=&quot;安全洞察&quot;&gt;安全洞察&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://security.opensuse.org/2025/07/25/spring-spotlight.html&quot;&gt;SUSE 安全团队 2025 年春季聚焦&lt;/a&gt; —— SUSE 安全团队分享了其 2025 年春季工作的见解，包括对 GDM、Flatpak 和 ModemManager 中新 Polkit 功能的审查。他们还详细介绍了在 cyrus-imapd 中发现的权限提升漏洞，以及 systemd-coredump 的配置变更。&lt;/p&gt;

&lt;h2 id=&quot;社区与推广&quot;&gt;社区与推广&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://news.opensuse.org/2025/07/23/urgency-to-switch-builds/&quot;&gt;切换 Windows 10 版本的紧迫性&lt;/a&gt; —— Douglas DeMaio 强调了 openSUSE 项目参与 “&lt;a href=&quot;https://endof10.org/&quot;&gt;告别 Win10&lt;/a&gt;” 运动的情况，呼吁用户从 Windows 10（其支持将于 10 月结束）迁移到基于 Linux 的操作系统。文章既强调了继续使用不受支持的系统所面临的网络安全风险，也指出了通过采用 Linux 来延长旧硬件使用寿命所带来的环境效益。&lt;/p&gt;

&lt;h2 id=&quot;技术深度解析&quot;&gt;技术深度解析&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://peter.czanik.hu/other/dealing-with-multiple-syslog-protocols-in-syslog-ng-made-easy/&quot;&gt;轻松应对 syslog-ng 中的多种 syslog 协议&lt;/a&gt; —— Peter Czanik介绍了 syslog-ng 中新的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transport (auto)&lt;/code&gt; 选项，该选项通过单一源驱动程序简化了对多种 syslog 协议变体（RFC3164、RFC5424）的处理，使 syslog 配置更加简便。&lt;/p&gt;

&lt;h2 id=&quot;kde-社区&quot;&gt;KDE 社区&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kdeblog.com/esquinas-inferiores-redondeadas-esta-semana-en-plasma.html&quot;&gt;Esquinas inferiores redondeadas – Esta semana en Plasma&lt;/a&gt; —— Baltolkien 将 Nate Graham 的每周 Plasma 更新翻译成西班牙语，内容涵盖 Plasma 6.5 的开发情况，包括自动圆角底部窗口的实现以及多项用户界面改进。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kdeblog.com/control-del-nivel-de-tinta-de-la-impresora-esta-semana-en-plasma.html&quot;&gt;Control del nivel de tinta de la impresora – Esta semana en Plasma&lt;/a&gt; —— 这是 Baltolkien 翻译的另一篇 Nate Graham 的每周 Plasma 更新西班牙语版本，重点介绍了打印机墨水水平通知、通知处理的改进，以及 Plasma 6.4.4 和 6.5 中的多项 bug 修复。&lt;/p&gt;

&lt;h2 id=&quot;社区活动&quot;&gt;社区活动&lt;/h2&gt;

&lt;p&gt;Akademy 2026 征集举办地——快来提交申请吧！—— Baltolkien 宣布，KDE 年度开发者大会 Akademy 2026 为庆祝其 30 周年，正在寻找欧洲的举办场地，并提供了申请要求和提交方式的详细信息。&lt;/p&gt;

&lt;p&gt;查看更多博客或了解如何在 &lt;a href=&quot;https://planet.opensuse.org/&quot;&gt;planet.opensuse.org&lt;/a&gt; 上发布自己的内容。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/07/28/planet-roundup/&quot;&gt;Planet News Roundup&lt;/a&gt;，作者：Douglas DeMaio&lt;/p&gt;
</content:encoded>
    </item>

    <item>
      <guid>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/29/urgency-to-switch-builds.html</guid>
      <title>从 Windows 10 版本切换的紧迫性</title>
      <pubDate>Tue, 29 Jul 2025 23:00:00 +0000</pubDate>
      <link>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/29/urgency-to-switch-builds.html</link>
      <author>Fangzhou Liu</author>
      <description>趁现在还来得及，赶紧安装 Linux 吧 随着微软计划于今年 10 月终止对 Windows 10 的支持这一日期的临近，开放源代码倡导者组成的联盟正在不断扩大，openSUSE 项目 便是其中一员，该联盟正力劝微软用户安装 Linux 操作系统，而传达这一信息的紧迫性也日益加剧。 IT 行业 的一些人士表示，多达 50% 的设备仍在使用 Windows 10，这给用户和企业带来了极大风险。 那些继续使用 Windows 10 且不升级到能提供安全和维护更新的操作系统（如 Linux 系统或 Windows 11）的用户，将容易受到漏洞攻击、恶意软件感染、软件不兼容的影响，而且随着时间的推移，系统不稳定和故障的情况也会越来越多。 “告别 Win10” 运动及其倡议旨在推广以迁移为核心的各类 活动，帮助这些用户从 Windows 10 转向基于 Linux 的操作系统。 10 月 14 日，将有数量空前的电脑失去保护。随着今年秋季这一最后期限日益临近，数百万用户正面临抉择，而推动人们迁移到 openSUSE 等 Linux 操作系统的工作已到了关键节点。 距离 10 月 14 日仅剩...</description>
      <content:encoded>&lt;h2 id=&quot;趁现在还来得及赶紧安装-linux-吧&quot;&gt;趁现在还来得及，赶紧安装 Linux 吧&lt;/h2&gt;

&lt;p&gt;随着微软计划于今年 10 月终止对 Windows 10 的支持这一日期的临近，开放源代码倡导者组成的联盟正在不断扩大，&lt;a href=&quot;https://get.opensuse.org/&quot;&gt;openSUSE 项目&lt;/a&gt; 便是其中一员，该联盟正力劝微软用户安装 Linux 操作系统，而传达这一信息的紧迫性也日益加剧。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.controlup.com/windows-11-readiness/#&quot;&gt;IT 行业&lt;/a&gt; 的一些人士表示，多达 50% 的设备仍在使用 Windows 10，这给用户和企业带来了极大风险。&lt;/p&gt;

&lt;p&gt;那些继续使用 Windows 10 且不升级到能提供安全和维护更新的操作系统（如 Linux 系统或 Windows 11）的用户，将容易受到漏洞攻击、恶意软件感染、软件不兼容的影响，而且随着时间的推移，系统不稳定和故障的情况也会越来越多。&lt;/p&gt;

&lt;p&gt;“&lt;a href=&quot;https://endof10.org/&quot;&gt;告别 Win10&lt;/a&gt;” 运动及其倡议旨在推广以迁移为核心的各类 &lt;a href=&quot;https://endof10.org/events/&quot;&gt;活动&lt;/a&gt;，帮助这些用户从 Windows 10 转向基于 Linux 的操作系统。&lt;/p&gt;

&lt;p&gt;10 月 14 日，将有数量空前的电脑失去保护。随着今年秋季这一最后期限日益临近，数百万用户正面临抉择，而推动人们迁移到 &lt;a href=&quot;https://get.opensuse.org/&quot;&gt;openSUSE&lt;/a&gt; 等 Linux 操作系统的工作已到了关键节点。&lt;/p&gt;

&lt;p&gt;距离 10 月 14 日仅剩 12 周，Windows 10 的支持终止期限将使那些尚未迁移系统的用户面临越来越多的网络威胁。&lt;/p&gt;

&lt;p&gt;除了这些威胁外，“&lt;a href=&quot;https://endof10.org/&quot;&gt;告别 Win10&lt;/a&gt;” 运动的一个重要方面还强调环境责任、数字可持续性，以及为那些使用老旧电脑的用户节省长期成本 —— 这些老旧设备很可能最终会被 &lt;a href=&quot;https://news.opensuse.org/2025/04/14/replace-windows-not-your-device/&quot;&gt;回收或扔进垃圾填埋场&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;“&lt;a href=&quot;https://endof10.org/&quot;&gt;告别 Win10&lt;/a&gt;” 的倡导者及相关支持组织（如 &lt;a href=&quot;https://nextcloud.com/&quot;&gt;NextCloud&lt;/a&gt;、&lt;a href=&quot;https://www.repaircafe.org/&quot;&gt;REPAIR CAFE&lt;/a&gt;、&lt;a href=&quot;https://kde.org/&quot;&gt;KDE&lt;/a&gt;、&lt;a href=&quot;https://gnome.org/&quot;&gt;GNOME&lt;/a&gt;、&lt;a href=&quot;https://fsfe.org/&quot;&gt;FSFE&lt;/a&gt;、&lt;a href=&quot;https://eu-os.eu/&quot;&gt;EU OS&lt;/a&gt; 等）更希望用户为自己的老旧硬件找到 Linux 解决方案，而非让此次系统支持终止事件酿成一场环境灾难。在这些旧系统上安装 Linux，能为那些功能完好却可能被丢弃的机器注入新的生命力。&lt;/p&gt;

&lt;p&gt;一年多来，多个开源软件项目及组织一直在开展合作，共同打造统一的资源库、教程、迁移工具和支持渠道，旨在为那些希望安装新的 Linux 操作系统的用户降低入门门槛。&lt;/p&gt;

&lt;p&gt;openSUSE 社区成员及其他人士一直在积极呼吁那些 &lt;a href=&quot;https://news.opensuse.org/2024/11/20/upgrade-to-freedom-the-switch-from-windows/&quot;&gt;无法将设备升级到 Windows 11 的 Windows 10 用户选择 Linux 系统&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;对于那些准备采取行动的人来说，&lt;a href=&quot;https://endof10.org/&quot;&gt;该运动的网站&lt;/a&gt; 上提供了相关资源以及社区活动的链接，以帮助人们安装 Linux 系统。&lt;/p&gt;

&lt;p&gt;任何想要安装 &lt;a href=&quot;https://www.opensuse.org/&quot;&gt;openSUSE&lt;/a&gt; 发行版的人都可以参考这份《&lt;a href=&quot;https://news.opensuse.org/2024/11/26/transition-from-windows-step-by-step/&quot;&gt;分步指南&lt;/a&gt;》。&lt;/p&gt;

&lt;p&gt;给 Windows 10 用户的信息很明确：不要更换电脑，要重新打造它！&lt;/p&gt;

&lt;p&gt;&lt;small&gt;这是 &lt;a href=&quot;https://news.opensuse.org/category/upgrade-to-freedom&quot;&gt;告别 Win10（End of 10）&lt;/a&gt; 系列内容的一部分，在此我们倡导使用免费及开源软件（Free &amp;amp; Open Source Software, FOSS）作为解决方案，帮助那些希望继续使用现有设备而非更换硬件的 Windows 10 用户，避免造成仍在正常运行设备的电子垃圾问题。&lt;/small&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/07/23/urgency-to-switch-builds/&quot;&gt;Urgency to Switch from Windows 10 Builds&lt;/a&gt;，作者：Douglas DeMaio&lt;/p&gt;
</content:encoded>
    </item>

    <item>
      <guid>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/26/fde-rogue-device.html</guid>
      <title>在 openSUSE 中借助全磁盘加密防范恶意设备</title>
      <pubDate>Sat, 26 Jul 2025 02:30:00 +0000</pubDate>
      <link>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/26/fde-rogue-device.html</link>
      <author>Fangzhou Liu</author>
      <description>openSUSE 如今有多种方式可配置全磁盘加密（FDE）安装。正如我们多次描述的那样（例如 这里、这里 或 这里），一种非常安全且简便的方法（通过 YaST2）是借助用户空间工具来实现。该解决方案基于 systemd 工具集，如 systemd-cryptenroll、systemd-pcrlock 和 systemd-cryptsetup 等，由内部的 sdbootutils 脚本进行协调。 使用这种 systemd 方法的主要优势之一是能够集成多种认证方式。除了在 initrd 阶段启动时要求输入的传统密码外，我们现在还可以使用证书、TPM2 或 FIDO2 密钥来解锁系统。我们可以将其中一些方式结合起来，创建多个 LUKS2 密钥槽，例如，使用 TPM2 以无人值守的方式解锁设备，并将 FIDO2 密钥用作恢复机制。 说实话，TPM2 以及 TPM2+PIN 的组合，对用户而言是最实用的。正如我们在其他文章中所描述的，TPM2 是一种（有时是虚拟的）设备，它能够通过一种名为测量启动（measured boot）的机制来验证系统的健康状态。 简单来说的话，启动过程的每个阶段，从固件开始，都会在将执行权交给下一阶段之前，先加载并 “测量” 该阶段。例如，这意味着在启动过程的最后阶段，UEFI 固件会从磁盘将引导加载程序（可能是 shim、systemd-boot 或 grub2-bls）加载到内存中。随后，它会计算一个哈希值（通常是 SHA256），并命令 TPM2 对其内部寄存器（PCR）之一执行 “扩展”（extend）操作。 这种 “扩展” 是一种加密计算，它易于计算却无法复制。扩展操作针对 TPM2 的某个内部寄存器（PCR）进行，具体过程是：将该...</description>
      <content:encoded>&lt;p&gt;openSUSE 如今有多种方式可配置全磁盘加密（FDE）安装。正如我们多次描述的那样（例如 &lt;a href=&quot;https://news.opensuse.org/2023/12/20/systemd-fde/&quot;&gt;这里&lt;/a&gt;、&lt;a href=&quot;https://microos.opensuse.org/blog/2023-12-20-sdboot-fde/&quot;&gt;这里&lt;/a&gt; 或 &lt;a href=&quot;https://news.opensuse.org/2024/09/20/quickstart-fde-yast2/&quot;&gt;这里&lt;/a&gt;），一种非常安全且简便的方法（通过 YaST2）是借助用户空间工具来实现。该解决方案基于 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 工具集，如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-cryptenroll&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-pcrlock&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-cryptsetup&lt;/code&gt; 等，由内部的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sdbootutil&lt;/code&gt;s 脚本进行协调。&lt;/p&gt;

&lt;p&gt;使用这种 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 方法的主要优势之一是能够集成多种认证方式。除了在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initrd&lt;/code&gt; 阶段启动时要求输入的传统密码外，我们现在还可以使用证书、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FIDO2&lt;/code&gt; 密钥来解锁系统。我们可以将其中一些方式结合起来，创建多个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LUKS2&lt;/code&gt; 密钥槽，例如，使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 以无人值守的方式解锁设备，并将 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FIDO2&lt;/code&gt; 密钥用作恢复机制。&lt;/p&gt;

&lt;p&gt;说实话，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 以及 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2+PIN&lt;/code&gt; 的组合，对用户而言是最实用的。正如我们在其他文章中所描述的，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 是一种（有时是虚拟的）设备，它能够通过一种名为测量启动（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;measured boot&lt;/code&gt;）的机制来验证系统的健康状态。&lt;/p&gt;

&lt;p&gt;简单来说的话，启动过程的每个阶段，从固件开始，都会在将执行权交给下一阶段之前，先加载并 “测量” 该阶段。例如，这意味着在启动过程的最后阶段，UEFI 固件会从磁盘将引导加载程序（可能是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shim&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-boot&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grub2-bls&lt;/code&gt;）加载到内存中。随后，它会计算一个哈希值（通常是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA256&lt;/code&gt;），并命令 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 对其内部寄存器（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt;）之一执行 “扩展”（extend）操作。&lt;/p&gt;

&lt;p&gt;这种 “扩展” 是一种加密计算，它易于计算却无法复制。扩展操作针对 TPM2 的某个内部寄存器（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt;）进行，具体过程是：将该 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 的旧值与被测量组件的哈希值（同样采用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA256&lt;/code&gt; 算法）结合起来，计算出一个新的哈希值。这个新值会取代 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 当前的值，而这也是修改这些寄存器的唯一方式。其安全特性在于，从加密角度而言，强行向 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 写入预期值是不可能的，但计算最终值却十分容易。&lt;/p&gt;

&lt;p&gt;这意味着，如果启动链过程中的所有组件（包括 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UEFI&lt;/code&gt; 固件的所有阶段、固件配置、引导加载程序、命令行、内核乃至 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initrd&lt;/code&gt;）都经过测量，那么我们就可以将最终的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 值与预期值进行比对，从而判断系统是否是通过已知的正常软件和配置启动的，进而能立即发现启动链中的某个组件是否被非法篡改或入侵。&lt;/p&gt;

&lt;p&gt;这是一项强大的特性，但更有趣的是，我们可以让机密信息仅在系统处于已知的安全状态时才能被访问。例如，我们可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 对用于解锁加密磁盘的密钥进行加密（密封），同时设置一项策略：只有在使用同一 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 且 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 值与预期列表中的值匹配时，才能对该密钥进行解密（解封）。这些策略可以非常复杂，还能包含额外的密码、证书或其他验证项，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 必须在验证通过后才能解封密钥。&lt;/p&gt;

&lt;p&gt;借助这种机制，在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 工具的支持下，当系统处于健康状态时，我们无需输入密码即可解锁加密磁盘。这里的 “健康” 是指，通过加密方式确保启动过程中使用的代码和配置与预期一致，例如，内核命令行中未被植入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init=/bin/bash&lt;/code&gt; 这样的恶意指令，内核或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initrd&lt;/code&gt; 也未被替换为存在漏洞的版本。&lt;/p&gt;

&lt;p&gt;在 openSUSE 中，我们对该模型进行了集成，使得系统更新（包括引导加载程序或内核更新）时，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sdbootutil&lt;/code&gt; 会自动生成新的预期 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 值（这些值被视为安全的）。这意味着 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 策略会相应更新，并在下次启动时生效，从而确保自动解锁能够成功。若出现异常情况，即实际 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 值与预期不符，用户则需要输入存储在另一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LUKS2&lt;/code&gt; 密钥槽中的密码来解锁设备，进而对系统进行审计和验证。&lt;/p&gt;

&lt;h2 id=&quot;设计中的潜在缺陷&quot;&gt;设计中的潜在缺陷&lt;/h2&gt;

&lt;p&gt;如前所述，使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 无疑能提升安全等级，但它并非终极解决方案 —— 安全性始终是一种渐近式的逼近（没有绝对的安全）。&lt;/p&gt;

&lt;p&gt;几年前，有人针对 Windows BitLocker 的全磁盘加密方案提出了一种 &lt;a href=&quot;https://cybersecurity.bureauveritas.com/blog/tpm-sniffing-attacks-against-non-bitlocker-targets&quot;&gt;物理攻击方式&lt;/a&gt;。BitLocker 同样采用了类似前文所述的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 使用逻辑，但它在与设备通信时未采用加密会话。攻击者通过拦截 SPI 总线，就可能获取用于解锁磁盘的密码。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 从这一案例中吸取教训，很早就采用了加密会话来应对此类风险；不过，若用于解封密钥的策略还要求用户输入 PIN 码或密码，这类攻击也能被避免 —— 此时，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 只有在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 值符合预期且用户提供的密码正确时，才能解封密钥。需要说明的是，SPI 嗅探攻击对 Clevis（一种加密框架）同样可能 &lt;a href=&quot;https://www.securitum.com/extracting_clevisbitlocker_secrets_from_tpm_traffic_.html&quot;&gt;奏效&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;但最近又出现了一种新的公开 &lt;a href=&quot;https://oddlama.org/blog/bypassing-disk-encryption-with-tpm2-unlock/&quot;&gt;攻击方式&lt;/a&gt;，它能直接影响上述原始设计，且实施难度远低于前一种攻击（说明：我们内部几个月前就独立发现了这一攻击方式，并早已采取了相应的应对措施）。&lt;/p&gt;

&lt;p&gt;该文章描述了这种攻击的实施方式：通过检查 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initrd&lt;/code&gt; 中用于挂载加密设备的文件系统 UUID 来实现。相关信息存储在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initrd&lt;/code&gt; 内的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/crypttab&lt;/code&gt; 中，其内容大致如下：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemd-cryptsetup attach cr_root /dev/disk/by-uuid/&lt;span class=&quot;nv&quot;&gt;$UUID&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;none&apos;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;tpm2-device=auto&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果启动过程中使用的是预期的固件、配置文件、内核和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initrd&lt;/code&gt;，那么 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 寄存器值将与解锁设备的策略匹配，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 会解封密封的密钥，磁盘随之解锁，根文件系统切换（switch root）成功，启动过程将在根文件系统（rootfs）中继续进行。&lt;/p&gt;

&lt;p&gt;但如果原始驱动器被替换成了另一个加密设备，而这个设备具有相同的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UUID&lt;/code&gt;（毕竟 UUID 是公开信息），会发生什么呢？此时，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 寄存器的值仍会处于正确状态（因为测量启动中，前一阶段会先测量下一阶段再移交执行权，替换驱动器不会影响此前的测量结果）。接下来，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-cryptsetup&lt;/code&gt; 会尝试用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 成功解封的密钥去解锁这个设备，结果自然是解锁失败。这个恶意设备的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LUKS2&lt;/code&gt; 头部里或许也有一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 密钥槽，但毫无疑问，它既无法用这个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 解锁，也无法用那个（用户的）秘密密码解锁。&lt;/p&gt;

&lt;p&gt;这种情况下，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-cryptsetup&lt;/code&gt; 会尝试用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 解封的密钥解锁设备，结果必然失败。随后，它会要求用户输入密码以解锁设备，而攻击者此时可以输入一个能解锁该恶意设备的密码。根文件系统切换会顺利完成，但启动过程将在假根文件系统（fake &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rootfs&lt;/code&gt;） 中继续——存储在该文件系统中的程序可以向 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 发送请求（此时 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 仍保存着正确的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 值），其中一个请求可能是根据当前策略解封密钥。而这一次（和之前的正常流程一样），&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 会同意将密钥交给这个恶意程序。至此，攻击成功。&lt;/p&gt;

&lt;p&gt;针对这种攻击，当然有相应的解决办法。&lt;/p&gt;

&lt;p&gt;一种办法是再次采用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2+PIN&lt;/code&gt; 的组合，而非仅使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt;，这与应对嗅探攻击的解决思路一致。在这种情形下，首次调用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-cryptsetup&lt;/code&gt; 会失败，系统会要求用户输入密码来解锁设备。但此时，恶意程序无法让 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 依据当前策略解封设备。尽管 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 值是匹配的，但该策略还要求输入只有真正用户才知晓的秘密 PIN 码或密码，要是没有这个密码，解封操作就会失败，密钥也能得以安全保存。&lt;/p&gt;

&lt;p&gt;另一种解决办法是在某种程度上使策略失效，即在根文件系统切换（switch root）之前，对部分相关的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 寄存器进行扩展操作，这样一来，之后该策略就无法再被应用。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-cryptsetup&lt;/code&gt; 可以通过在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/crypttab&lt;/code&gt; 中设置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;measure-pcr=yes&lt;/code&gt; 来自动实现这一点。启用这个选项后，会使用卷密钥（只有知道某些设备密钥才能提取出的一种秘密信息）对 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR15&lt;/code&gt; 进行扩展。要让这个解决方案生效，需要把 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR15&lt;/code&gt; 纳入当前策略中，其预期值设为默认的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x000..00&lt;/code&gt;。一旦黑客用自己提供的密码打开了恶意设备，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR15&lt;/code&gt; 就会被自动扩展，其值将不再是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x000..00&lt;/code&gt;，从而在根文件系统切换之前使该策略失效。&lt;/p&gt;

&lt;p&gt;但这个方案对我们而言并不适用。日常使用中，用户需要更新系统（例如更新内核），此时需计算新策略替代旧策略。由于 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-pcrlock&lt;/code&gt; 会将策略存储在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TPM2&lt;/code&gt; 的非易失性 RAM 插槽（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NVIndex&lt;/code&gt;）中，我们需要保护它不被其他进程替换。为此，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 会将一个恢复 PIN 码存储在另一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NVIndex&lt;/code&gt; 中，且该 PIN 码由同一策略密封！若因策略失效导致无法自动恢复密钥，系统会要求用户输入恢复 PIN 码——若策略频繁失效，更新过程会变得十分繁琐。&lt;/p&gt;

&lt;p&gt;最后，另一种解决思路是：若检测到设备并非预期的那一个，就终止启动过程。可在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initrd&lt;/code&gt; 中新增一个服务，让它在根文件系统切换前的最后一刻运行；一旦发现存储根文件系统（rootfs）的设备不符预期，就立即终止启动（例如让系统停机）。&lt;/p&gt;

&lt;p&gt;为此，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR15&lt;/code&gt; 仍然是一个不错的解决方案。它包含了一个秘密（卷密钥）的测量值，这个秘密只有真正的用户才能知晓，攻击者无法复制。理想情况下，我们可以为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR15&lt;/code&gt; 创建一个预期值，让这个服务将实际值与预期值进行比较，如果两者不同，就可以停止启动过程。&lt;/p&gt;

&lt;p&gt;这正是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sdbootutil&lt;/code&gt; 中的 &lt;a href=&quot;https://github.com/openSUSE/sdbootutil/blob/main/measure-pcr-validator.sh&quot;&gt;measure-pcr-validator 服务&lt;/a&gt; &lt;a href=&quot;https://youtu.be/V52Doa06_WQ?si=jEImU6pzUvqWmcbp&quot;&gt;所做的事情&lt;/a&gt;。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sdbootutil&lt;/code&gt; 首先为所有在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initrd&lt;/code&gt; 期间被打开的加密设备生成一个预期值，并检查 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/crypttab&lt;/code&gt; 中是否存在正确的标记。为了能够访问卷密钥，该工具需要根密码，因此这个预期值只在真正需要的时候才会更新，例如添加新的加密设备时。这个预期值由存储在主机中的私钥签名，作为一项额外的安全措施，但由于公钥也存储在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ESP&lt;/code&gt; 中，说实话这并没有增加太多安全性。&lt;/p&gt;

&lt;p&gt;额外的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;measure-pcr-generator&lt;/code&gt; 服务会规范加密设备的打开顺序，因为这个顺序对于生成唯一可能的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR15&lt;/code&gt; 值至关重要。如果只有一个加密设备，测量顺序无关紧要，但如果有三个（例如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rootfs&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home 分区&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swap 交换分区&lt;/code&gt;），就可能产生六个不同且有效的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR15&lt;/code&gt; 值。&lt;/p&gt;

&lt;p&gt;最后一步是，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initrd&lt;/code&gt; 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dracut-pcr-signature&lt;/code&gt; 服务会从 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ESP&lt;/code&gt; 导入预期值、签名和公钥，这样&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;measure-pcr-validator&lt;/code&gt; 服务就能验证签名并比较 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PCR&lt;/code&gt; 值。&lt;/p&gt;

&lt;p&gt;这样就大功告成了！&lt;/p&gt;

&lt;p&gt;这种方法与新的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemd-validatefs&lt;/code&gt; 在文件系统层面所做的工作有些类似。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/07/18/fde-rogue-devices/&quot;&gt;Protecting against rogue devices in openSUSE with Full Disk Encryption&lt;/a&gt;，作者：Alberto Planas&lt;/p&gt;
</content:encoded>
    </item>

    <item>
      <guid>/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2025/07/16/local-llm-with-openSUSE.html</guid>
      <title>在 openSUSE Tumbleweed 上使用 Ollama 运行本地大语言模型</title>
      <pubDate>Wed, 16 Jul 2025 02:30:00 +0000</pubDate>
      <link>/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2025/07/16/local-llm-with-openSUSE.html</link>
      <author>Fangzhou Liu</author>
      <description>本文为社区投稿作品翻译。 在本地计算机上运行大型语言模型（LLM）正变得越来越流行，它能提供隐私保护、离线访问和自定义功能。Ollama 是一款出色的工具，可以简化本地下载、设置和运行 LLM 的流程。它以强大的 llama.cpp 作为后端，支持在各种硬件上高效推理。本指南将介绍如何在 openSUSE Tumbleweed 上安装 Ollama，并解释 Modelfile、模型标签和量化等关键概念。 在 openSUSE Tumbleweed 上安装 Ollama Ollama 提供了简单的一键安装命令。打开终端并运行以下指令： curl -fsSL https://ollama.com/install.sh | sh 该脚本将在你的系统上下载并安装 Ollama，并自动检测是否支持 GPU 以进行相应配置。 如果更倾向于使用 zypper ，你可以直接在仓库中安装 Ollama： sudo zypper install ollama 该命令会下载 Ollama 及其所有依赖。如遇到问题，请确保系统已经更新： sudo zypper refresh sudo zypper update 安装结束后，你可以启动 Ollama 服务： sudo systemctl...</description>
      <content:encoded>&lt;blockquote&gt;
  &lt;p&gt;本文为社区投稿作品翻译。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在本地计算机上运行大型语言模型（LLM）正变得越来越流行，它能提供隐私保护、离线访问和自定义功能。&lt;a href=&quot;https://build.opensuse.org/package/show/openSUSE%3AFactory/ollama&quot;&gt;Ollama&lt;/a&gt; 是一款出色的工具，可以简化本地下载、设置和运行 LLM 的流程。它以强大的 &lt;a href=&quot;https://build.opensuse.org/package/show/openSUSE%3AFactory/llamacpp&quot;&gt;llama.cpp&lt;/a&gt; 作为后端，支持在各种硬件上高效推理。本指南将介绍如何在 openSUSE Tumbleweed 上安装 Ollama，并解释 Modelfile、模型标签和量化等关键概念。&lt;/p&gt;

&lt;h2 id=&quot;在-opensuse-tumbleweed-上安装-ollama&quot;&gt;在 openSUSE Tumbleweed 上安装 Ollama&lt;/h2&gt;

&lt;p&gt;Ollama 提供了简单的一键安装命令。打开终端并运行以下指令：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://ollama.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该脚本将在你的系统上下载并安装 Ollama，并自动检测是否支持 GPU 以进行相应配置。&lt;/p&gt;

&lt;p&gt;如果更倾向于使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zypper&lt;/code&gt; ，你可以直接在仓库中安装 Ollama：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;zypper &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ollama
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该命令会下载 Ollama 及其所有依赖。如遇到问题，请确保系统已经更新：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;zypper refresh
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;zypper update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装结束后，你可以启动 Ollama 服务：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start ollama
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如需要设置开机自启：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;ollama
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;运行第一个大语言模型&quot;&gt;运行第一个大语言模型&lt;/h2&gt;

&lt;p&gt;安装好 Ollama 之后，只需要一条简单的命令就可以运行大语言模型了。让我们试下运行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;llama3&lt;/code&gt; 模型：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ollama run llama3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;首次运行该命令时，Ollama 会下载模型文件。根据你的网络情况，下载可能需要一些时间。完成后，你将进入交互界面，并可以直接与模型对话。&lt;/p&gt;

&lt;h2 id=&quot;选择合适的模型&quot;&gt;选择合适的模型&lt;/h2&gt;

&lt;p&gt;Ollama 模型库提供了丰富的选择。访问 &lt;a href=&quot;https://ollama.com/library&quot;&gt;Ollama 官网&lt;/a&gt; 的模型页面时，你会看到各种“标签”。理解这些标签的含义，对选择适合你需求和硬件配置的模型至关重要。&lt;/p&gt;

&lt;h3 id=&quot;模型规格参数如-7b8x7b70b&quot;&gt;模型规格参数（如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;7b&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8x7b&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;70b&lt;/code&gt;）&lt;/h3&gt;

&lt;p&gt;这些标签指的是模型参数规格，单位为十亿。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;7b&lt;/code&gt;&lt;/strong&gt;：70 亿参数模型。适合通用任务，运行速度较快，内存需求不高。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4b&lt;/code&gt;&lt;/strong&gt;：40 亿参数模型。体积更小速度更快，适合资源有限的设备。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;70b&lt;/code&gt;&lt;/strong&gt;：700 亿参数模型。性能更强能力更全面，但需要大内存和高性能 GPU 才能达到理想速度。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8x7b&lt;/code&gt;&lt;/strong&gt;：这是“混合专家”（Mixture of Experts, MoE）模型。包含 8 个 70 亿参数的专家模型，每次请求只使用其中部分参数，比同等规模的传统模型更高效。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;70b_MoE&lt;/code&gt;&lt;/strong&gt;：类似 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8x7b&lt;/code&gt;，这是 700 亿参数的 MoE 模型，在某些任务上效率更高。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;专用标签如toolsthinkingvision&quot;&gt;专用标签（如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tools&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;thinking&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vision&lt;/code&gt;）&lt;/h3&gt;

&lt;p&gt;部分模型针对特定任务进行了微调：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tools&lt;/code&gt;&lt;/strong&gt;：这类模型专为“工具使用”设计，大语言模型可以调用外部工具（如计算器或 API）来回答问题。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;thinking&lt;/code&gt;&lt;/strong&gt;：该标签通常表示模型经过训练会“展示思考过程”或逐步推理，在处理复杂推理任务时能提供更准确的结果。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vision&lt;/code&gt;&lt;/strong&gt;：带有此标签的模型针对视觉输入任务（如图像识别或分析）进行了优化。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;蒸馏模型distill&quot;&gt;蒸馏模型（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;distill&lt;/code&gt;）&lt;/h3&gt;

&lt;p&gt;“蒸馏”模型是通过训练小型模型模仿大型模型输出而得到的精简版本。其目标是将大模型的知识和能力转移到更小、更高效的模型中。&lt;/p&gt;

&lt;h2 id=&quot;量化技术说明&quot;&gt;量化技术说明&lt;/h2&gt;

&lt;p&gt;Ollama 上的大多数模型都经过“量化”处理。量化是指降低模型权重（构成模型的数值）精度的过程。这能减小模型文件体积并降低运行所需的内存和显存，但会轻微影响准确性。&lt;/p&gt;

&lt;p&gt;常见的量化标签包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fp16&lt;/code&gt;&lt;/strong&gt;：16 位全精度浮点。通常是未经量化的原始版本，提供最佳质量但资源需求最高。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q8&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q8_0&lt;/code&gt;&lt;/strong&gt;：8 位量化。性能与质量的理想平衡。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q4&lt;/code&gt;&lt;/strong&gt;：4 位量化。体积显著减小、速度更快，但对质量影响较明显。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q4_K_M&lt;/code&gt;&lt;/strong&gt;：进阶版 4 位量化。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;K_M&lt;/code&gt; 表示采用 K 均值量化方法的中等规格变体，通常比标准 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q4&lt;/code&gt; 量化质量更好。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q8_O&lt;/code&gt;&lt;/strong&gt;：新版 8 位量化方法，相比旧版 8 位量化在性能和质量上都有提升。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对大多数用户来说，选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q4_K_M&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q8_0&lt;/code&gt; 版本的模型是最佳起点。&lt;/p&gt;

&lt;h2 id=&quot;使用-modelfile-自定义模型&quot;&gt;使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Modelfile&lt;/code&gt; 自定义模型&lt;/h2&gt;

&lt;p&gt;Ollama 采用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Modelfile&lt;/code&gt; 概念来实现模型定制。这个文本文件可以定义基础模型、系统提示词、参数等配置。&lt;/p&gt;

&lt;p&gt;以下是为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;llama3&lt;/code&gt; 模型创建海盗角色的简单示例：&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM llama3

# Set the temperature for creativity
PARAMETER temperature 1

# Set the system message
SYSTEM &quot;&quot;&quot;
You are a pirate. You will answer all questions in the voice of a pirate.
&quot;&quot;&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建并运行自定义模型的步骤：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;将上述内容保存为当前目录下的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Modelfile&lt;/code&gt; 文件&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;执行创建命令：&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ollama create pirate &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ./Modelfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;运行定制模型：&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ollama run pirate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;现在你的大语言模型就会用海盗口吻回应了！虽然这是简单示例，但 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Modelfile&lt;/code&gt; 能实现更复杂的定制需求。&lt;/p&gt;

&lt;p&gt;如需了解更多信息，请查阅 Ollama 官方文档：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ollama/ollama/tree/main/docs&quot;&gt;Ollama官方文档&lt;/a&gt;：核心功能说明&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ollama/ollama/blob/main/docs/import.md&quot;&gt;模型导入指南&lt;/a&gt;：其他格式模型的导入方法&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://huggingface.co/docs/hub/en/ollama&quot;&gt;Hugging Face集成&lt;/a&gt;：与Hugging Face平台的协作说明&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;祝你在 openSUSE 系统上定制模型玩得开心！&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/07/12/local-llm-with-openSUSE/&quot;&gt;Running Local LLMs with Ollama on openSUSE Tumbleweed&lt;/a&gt;，作者：Onuralp SEZER&lt;/p&gt;
</content:encoded>
    </item>

    <item>
      <guid>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/15/sovereign-ai-platform-picks-opensuse.html</guid>
      <title>主权 AI 平台选择 openSUSE</title>
      <pubDate>Tue, 15 Jul 2025 02:30:00 +0000</pubDate>
      <link>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/15/sovereign-ai-platform-picks-opensuse.html</link>
      <author>Fangzhou Liu</author>
      <description>欧洲首个联合人工智能计划 选择 openSUSE 作为其主权 AI 基础架构的一部分。 OpenNebula Systems 正式宣布推出 Fact8ra ——欧洲首个联合 AI 即服务平台。 这一举措标志着“下一代云基础设施与服务（IPCEI-CIS）”欧洲共同利益重大项目（IPCEI-CIS）30 亿欧元投资框架下的重要里程碑。 根据 7 月 9 日发布的新闻稿 ，“Fact8ra 能够整合来自八个欧盟成员国的计算资源”。 这八个国家包括法国、德国、意大利、拉脱维亚、荷兰、波兰、西班牙和瑞典。Fact8ra 旨在通过欧洲的高性能计算（HPC）、云和电信基础设施，为整个欧洲提供自主可控的开源人工智能能力。 作为 SUSE 赞助的全球开源项目，openSUSE 的技术被选为 Fact8ra 主权 AI 架构的核心组件。 欧洲最大公私合营云项目之一的认可，印证了业界对 openSUSE 稳定性、适应性与开放性的信赖。该系统不仅能支持服务器级应用，还可胜任前沿人工智能/机器学习工作负载。 据公告披露，该技术架构不仅整合了 openSUSE，还集成了 OpenNebula、MariaDB 等欧洲本土开源技术。 该平台支持部署 Mistral、EuroLLM 等开源大语言模型的私有实例，同时提供与 Hugging Face 等外部模型库的原生集成能力。 openSUSE 入选 Fact8ra 平台不仅是技术选择，更是对欧洲技术自主的战略背书。 Fact8ra...</description>
      <content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.einpresswire.com/article/829005610/europe-launches-its-first-federated-ai-factory-based-on-a-sovereign-multi-cloud-infrastructure&quot;&gt;欧洲首个联合人工智能计划&lt;/a&gt; 选择 &lt;a href=&quot;https://get.opensuse.org/&quot;&gt;openSUSE&lt;/a&gt; 作为其主权 AI 基础架构的一部分。&lt;/p&gt;

&lt;p&gt;OpenNebula Systems 正式宣布推出 &lt;a href=&quot;https://fact8ra.ai/&quot;&gt;Fact8ra&lt;/a&gt; ——欧洲首个联合 AI 即服务平台。&lt;/p&gt;

&lt;p&gt;这一举措标志着“下一代云基础设施与服务（IPCEI-CIS）”欧洲共同利益重大项目（IPCEI-CIS）30 亿欧元投资框架下的重要里程碑。&lt;/p&gt;

&lt;p&gt;根据 &lt;a href=&quot;https://www.einpresswire.com/article/829005610/europe-launches-its-first-federated-ai-factory-based-on-a-sovereign-multi-cloud-infrastructure&quot;&gt;7 月 9 日发布的新闻稿&lt;/a&gt; ，“Fact8ra 能够整合来自八个欧盟成员国的计算资源”。&lt;/p&gt;

&lt;p&gt;这八个国家包括法国、德国、意大利、拉脱维亚、荷兰、波兰、西班牙和瑞典。Fact8ra 旨在通过欧洲的高性能计算（HPC）、云和电信基础设施，为整个欧洲提供自主可控的开源人工智能能力。&lt;/p&gt;

&lt;p&gt;作为 &lt;a href=&quot;https://www.suse.com&quot;&gt;SUSE&lt;/a&gt; 赞助的全球开源项目，openSUSE 的技术被选为 Fact8ra 主权 AI 架构的核心组件。&lt;/p&gt;

&lt;p&gt;欧洲最大公私合营云项目之一的认可，印证了业界对 openSUSE 稳定性、适应性与开放性的信赖。该系统不仅能支持服务器级应用，还可胜任前沿人工智能/机器学习工作负载。&lt;/p&gt;

&lt;p&gt;据公告披露，该技术架构不仅整合了 openSUSE，还集成了 &lt;a href=&quot;https://opennebula.io/&quot;&gt;OpenNebula&lt;/a&gt;、&lt;a href=&quot;https://mariadb.org/&quot;&gt;MariaDB&lt;/a&gt; 等欧洲本土开源技术。&lt;/p&gt;

&lt;p&gt;该平台支持部署 &lt;a href=&quot;https://mistral.ai/&quot;&gt;Mistral&lt;/a&gt;、&lt;a href=&quot;https://eurollm.io/&quot;&gt;EuroLLM&lt;/a&gt; 等开源大语言模型的私有实例，同时提供与 &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt; 等外部模型库的原生集成能力。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://get.opensuse.org/&quot;&gt;openSUSE&lt;/a&gt; 入选 &lt;a href=&quot;https://fact8ra.ai/&quot;&gt;Fact8ra&lt;/a&gt; 平台不仅是技术选择，更是对欧洲技术自主的战略背书。&lt;/p&gt;

&lt;p&gt;Fact8ra 的核心使命在于强化欧洲技术主权，减少人工智能创新对外国平台的依赖。&lt;/p&gt;

&lt;p&gt;操作系统凭借支持云原生环境、实现 &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt; 容器编排以及集成 AI 推理硬件加速工具的能力，成功入选欧盟迄今为止最具雄心的数字项目。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/07/11/sovereign-ai-platform-picks-opensuse/&quot;&gt;Sovereign AI Platform Picks openSUSE&lt;/a&gt;，作者：Douglas DeMaio&lt;/p&gt;
</content:encoded>
    </item>

    <item>
      <guid>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/11/32-bits-arm.html</guid>
      <title>项目就 32 位 ARM 架构的未来发展征求社区意见</title>
      <pubDate>Fri, 11 Jul 2025 02:30:00 +0000</pubDate>
      <link>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/11/32-bits-arm.html</link>
      <author>Fangzhou Liu</author>
      <description>openSUSE 项目 现就 32 位 ARM 架构的持续支持问题公开征询 社区意见。 维护传统硬件平台的支持正变得日益困难。openSUSE 团队指出，上游支持有限和维护资源不断缩减，是考虑终止 32 位ARM架构（ARMv6 和 ARMv7）支持的关键因素。 包括 树莓派 1 代、Pi Zero、BeagleBone 等经典嵌入式设备在内的诸多硬件平台均依赖 32 位 ARM 架构。若您正在这些设备上使用 openSUSE 系统，项目团队亟需听取您的使用反馈。 请立即访问 survey.opensuse.org 参与问卷调查，您的意见将直接影响 32 位 ARM 架构的技术路线决策。本次调查将持续开放至7月底。 参与贡献 若您有意通过测试、提交错误报告或完善文档等方式协助维护 32 位 ARM 架构支持，欢迎加入以下任一交流渠道： IR C即时聊天：Libera.Chat 平台的 #opensuse-arm 频道 Matrix群组：#arm:opensuse.org 邮件列表：lists.opensuse.org 原文：Project Seeks Input on...</description>
      <content:encoded>&lt;p&gt;&lt;a href=&quot;https://get.opensuse.org/&quot;&gt;openSUSE 项目&lt;/a&gt; 现就 32 位 &lt;a href=&quot;https://www.arm.com/&quot;&gt;ARM&lt;/a&gt; 架构的持续支持问题公开征询 &lt;a href=&quot;https://lists.opensuse.org/archives/list/project@lists.opensuse.org/thread/BTYP5CFCKBH67W73CMJQNSZ76RNC2KWB/&quot;&gt;社区意见&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;维护传统硬件平台的支持正变得日益困难。openSUSE 团队指出，上游支持有限和维护资源不断缩减，是考虑终止 32 位ARM架构（&lt;a href=&quot;https://en.wikipedia.org/wiki/ARM_architecture_family&quot;&gt;ARMv6 和 ARMv7&lt;/a&gt;）支持的关键因素。&lt;/p&gt;

&lt;p&gt;包括 &lt;a href=&quot;https://www.raspberrypi.com/products/raspberry-pi-1-model-b-plus/&quot;&gt;树莓派 1 代&lt;/a&gt;、&lt;a href=&quot;https://www.raspberrypi.com/products/raspberry-pi-zero/&quot;&gt;Pi Zero&lt;/a&gt;、&lt;a href=&quot;https://www.beagleboard.org/&quot;&gt;BeagleBone&lt;/a&gt; 等经典嵌入式设备在内的诸多硬件平台均依赖 32 位 ARM 架构。若您正在这些设备上使用 openSUSE 系统，项目团队亟需听取您的使用反馈。&lt;/p&gt;

&lt;p&gt;请立即访问 &lt;a href=&quot;https://survey.opensuse.org/&quot;&gt;survey.opensuse.org&lt;/a&gt; 参与问卷调查，您的意见将直接影响 32 位 &lt;a href=&quot;https://www.arm.com/&quot;&gt;ARM&lt;/a&gt; 架构的技术路线决策。本次调查将持续开放至7月底。&lt;/p&gt;

&lt;h2 id=&quot;参与贡献&quot;&gt;参与贡献&lt;/h2&gt;
&lt;p&gt;若您有意通过测试、提交错误报告或完善文档等方式协助维护 32 位 ARM 架构支持，欢迎加入以下任一交流渠道：&lt;/p&gt;

&lt;p&gt;IR C即时聊天：Libera.Chat 平台的 #opensuse-arm 频道&lt;/p&gt;

&lt;p&gt;Matrix群组：#arm:opensuse.org&lt;/p&gt;

&lt;p&gt;邮件列表：&lt;a href=&quot;https://lists.opensuse.org/&quot;&gt;lists.opensuse.org&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/07/10/project-seeks-input-on-32-bit-arm/&quot;&gt;Project Seeks Input on Future of 32-bit ARM&lt;/a&gt;，作者：Douglas DeMaio&lt;/p&gt;
</content:encoded>
    </item>

    <item>
      <guid>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/11/20-years.html</guid>
      <title>庆祝 openSUSE 20 周年</title>
      <pubDate>Fri, 11 Jul 2025 01:30:00 +0000</pubDate>
      <link>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/11/20-years.html</link>
      <author>Fangzhou Liu</author>
      <description>我们诚邀各位贡献者与社区成员分享过去二十年间最难忘的瞬间，共同庆祝 openSUSE项目 二十周年华诞。 历经岁月沉淀，该项目已发展成为席卷全球的开源运动，为无数桌面系统、服务器及开发环境提供强大支持。 为铭记这段辉煌历程，我们正在全球范围内征集见证项目精神的照片——无论是技术大会、编程马拉松、社区聚会、纪念品收藏，还是成员个人成长的重要时刻。 每位成员可提交最多 20 张图片（拖拽文件上传）。入选作品将用于二十周年纪念展示，并在社区成员间广泛传播。 欢迎大家记录所在城镇的庆祝活动，将 照片 投稿至新闻版块或演示文稿中。 鼓励社区成员在各类会议及峰会上展示项目的二十年发展史。基于征集照片制作的演示文稿将在 openSUSE Wiki 上公开共享。 诚邀各位成员于 8 月 9 日莅临 openSUSE 主题酒吧 参加二十周年庆典，与全球社区伙伴共叙往昔。 openSUSE 亚洲峰会 期间将举办趣味问答活动，优胜者可获赠 二十周年纪念 T 恤。 这是对所有成就 openSUSE 今日辉煌的人们的礼赞——无论是经验丰富的贡献者、新生力量，还是热情的用户群体。每一张照片都在讲述我们共同历史的重要篇章。 我们期待收到 300 dpi 以上的高清图片。 openSUSE 项目启动于 2005 年 8 月 9 日。 若有 openSUSE 大会合影需提交，请发送至 ddemaio@opensuse.org 邮箱。 原文：Celebrating...</description>
      <content:encoded>&lt;p&gt;我们诚邀各位贡献者与社区成员分享过去二十年间最难忘的瞬间，共同庆祝 &lt;a href=&quot;https://www.opensuse.org/&quot;&gt;openSUSE项目&lt;/a&gt; 二十周年华诞。&lt;/p&gt;

&lt;p&gt;历经岁月沉淀，该项目已发展成为席卷全球的开源运动，为无数桌面系统、服务器及开发环境提供强大支持。&lt;/p&gt;

&lt;p&gt;为铭记这段辉煌历程，我们正在全球范围内征集见证项目精神的照片——无论是技术大会、编程马拉松、社区聚会、纪念品收藏，还是成员个人成长的重要时刻。&lt;/p&gt;

&lt;p&gt;每位成员可提交最多 20 张图片（&lt;a href=&quot;https://demacloud.ocloud.de/index.php/s/n7qRFTarEy2dit2&quot;&gt;拖拽文件上传&lt;/a&gt;）。入选作品将用于二十周年纪念展示，并在社区成员间广泛传播。&lt;/p&gt;

&lt;p&gt;欢迎大家记录所在城镇的庆祝活动，将 &lt;a href=&quot;https://demacloud.ocloud.de/index.php/s/n7qRFTarEy2dit2&quot;&gt;照片&lt;/a&gt; 投稿至新闻版块或演示文稿中。&lt;/p&gt;

&lt;p&gt;鼓励社区成员在各类会议及峰会上展示项目的二十年发展史。基于征集照片制作的演示文稿将在 &lt;a href=&quot;https://en.opensuse.org/openSUSE:Presentations&quot;&gt;openSUSE Wiki&lt;/a&gt; 上公开共享。&lt;/p&gt;

&lt;p&gt;诚邀各位成员于 8 月 9 日莅临 &lt;a href=&quot;https://meet.opensuse.org/bar&quot;&gt;openSUSE 主题酒吧&lt;/a&gt; 参加二十周年庆典，与全球社区伙伴共叙往昔。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://events.opensuse.org/&quot;&gt;openSUSE 亚洲峰会&lt;/a&gt; 期间将举办趣味问答活动，优胜者可获赠 &lt;a href=&quot;https://shop.opensuse.org/&quot;&gt;二十周年纪念 T 恤&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这是对所有成就 openSUSE 今日辉煌的人们的礼赞——无论是经验丰富的贡献者、新生力量，还是热情的用户群体。每一张照片都在讲述我们共同历史的重要篇章。&lt;/p&gt;

&lt;p&gt;我们期待收到 300 dpi 以上的高清图片。&lt;/p&gt;

&lt;p&gt;openSUSE 项目启动于 2005 年 8 月 9 日。&lt;/p&gt;

&lt;p&gt;若有 openSUSE 大会合影需提交，请发送至 &lt;a href=&quot;mailto:ddemaio@opensuse.org&quot;&gt;ddemaio@opensuse.org&lt;/a&gt; 邮箱。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/07/09/celebrating-20-yrs-of-os/&quot;&gt;Celebrating 20 Years of openSUSE&lt;/a&gt;，作者：Douglas DeMaio&lt;/p&gt;
</content:encoded>
    </item>

    <item>
      <guid>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/10/travel-support.html</guid>
      <title>openSUSE 亚洲峰会提供旅行资助</title>
      <pubDate>Thu, 10 Jul 2025 01:30:00 +0000</pubDate>
      <link>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/07/10/travel-support.html</link>
      <author>Fangzhou Liu</author>
      <description>2025 openSUSE 亚洲峰会 将于 8 月 29 日至 31 日在印度法里达巴德的马纳夫拉奇纳国际研究与教育学院（MRIIRS）举行，我们诚挚欢迎来自亚洲乃至全球的社区成员踊跃参与。 为了让更多开发者能够参与本次盛会，旅行资助计划（Travel Support Program，TSP） 将为需要经济支持的参会者提供协助。该计划由 Geeko 基金会 赞助，旨在帮助演讲者及参会者减轻部分差旅费用负担。 如需申请资助，请务必在 7 月 31 日之前 提交 TSP 申请表。 关键日期 TSP 申请截止日期：2025 年 7 月 31 日 峰会时间：2025 年 8 月 29 日至 31 日 地点：印度法里达巴德马纳夫拉奇纳国际研究与教育学院（MRIIRS, Faridabad, India） 这是一次与开源爱好者交流、分享知识并共同推动 openSUSE 及 Linux 在亚洲发展的绝佳机会。 申请详情请访问：https://en.opensuse.org/openSUSE:Travel_Support_Program...</description>
      <content:encoded>&lt;p&gt;&lt;a href=&quot;https://events.opensuse.org/conferences/oSAS25&quot;&gt;2025 openSUSE 亚洲峰会&lt;/a&gt; 将于 8 月 29 日至 31 日在印度法里达巴德的马纳夫拉奇纳国际研究与教育学院（MRIIRS）举行，我们诚挚欢迎来自亚洲乃至全球的社区成员踊跃参与。&lt;/p&gt;

&lt;p&gt;为了让更多开发者能够参与本次盛会，&lt;a href=&quot;https://en.opensuse.org/openSUSE:Travel_Support_Program&quot;&gt;旅行资助计划（Travel Support Program，TSP）&lt;/a&gt; 将为需要经济支持的参会者提供协助。该计划由 &lt;a href=&quot;https://geekos.org/&quot;&gt;Geeko 基金会&lt;/a&gt; 赞助，旨在帮助演讲者及参会者减轻部分差旅费用负担。&lt;/p&gt;

&lt;p&gt;如需申请资助，请务必在 7 月 31 日之前 提交 TSP 申请表。&lt;/p&gt;

&lt;h2 id=&quot;关键日期&quot;&gt;关键日期&lt;/h2&gt;
&lt;p&gt;TSP 申请截止日期：2025 年 7 月 31 日&lt;/p&gt;

&lt;p&gt;峰会时间：2025 年 8 月 29 日至 31 日&lt;/p&gt;

&lt;p&gt;地点：印度法里达巴德马纳夫拉奇纳国际研究与教育学院（MRIIRS, Faridabad, India）&lt;/p&gt;

&lt;p&gt;这是一次与开源爱好者交流、分享知识并共同推动 openSUSE 及 Linux 在亚洲发展的绝佳机会。&lt;/p&gt;

&lt;p&gt;申请详情请访问：&lt;a href=&quot;https://en.opensuse.org/openSUSE:Travel_Support_Program&quot;&gt;https://en.opensuse.org/openSUSE:Travel_Support_Program&lt;/a&gt; 并查阅 &lt;a href=&quot;https://en.opensuse.org/images/4/4c/Geeko_Foundation_Travel_Policy.pdf&quot;&gt;Geeko 基金会的差旅政策&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;基金会将与峰会组委会共同评估，确定可为参会者提供的具体资助额度。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/07/04/osas-tsp-available/&quot;&gt;Travel Support Available for openSUSE.Asia Summit&lt;/a&gt;，作者：Douglas DeMaio&lt;/p&gt;
</content:encoded>
    </item>

    <item>
      <guid>/%E6%9B%B4%E6%96%B0%E9%80%9A%E5%91%8A/2025/07/09/june-update.html</guid>
      <title>openSUSE Tumbleweed 每月更新 - 2025 年 6 月</title>
      <pubDate>Wed, 09 Jul 2025 01:30:00 +0000</pubDate>
      <link>/%E6%9B%B4%E6%96%B0%E9%80%9A%E5%91%8A/2025/07/09/june-update.html</link>
      <author>Fangzhou Liu</author>
      <description>六月，openSUSE 滚动发行版 迎来了一系列全新更新。此次更新包含重大功能增强、性能优化以及多项关键安全修复。 作为本次更新的核心亮点，KDE Plasma 6.4 与 KDE Frameworks 6.15.0 及 KDE Gear 25.04.2 同步登场。Linux 内核迎来多轮升级，GNU 编译器集合 15、Mesa 25.1.3 和 PipeWire 1.4.6 等软件包则强化了对现代硬件的支持，提升了图形渲染能力并优化了音频处理性能。本月最关键的更新当属针对安全漏洞的修复措施。 大量软件包在本月更新了重要的安全补丁。从 libsoup、Mozilla Firefox、Python、libssh、Salt 到 ClamAV 和 gdm 等组件，多个通用漏洞披露（CVE）问题得到解决，确保用户和开发者能够安心使用。 同往常一样，如遇任何问题，请务必使用 snapper 工具进行系统回滚。 欲了解本月完整更新日志，请访问 openSUSE Factory 邮件列表。 新功能和增强功能 KDE Plasma 6.4：此版本带来了更流畅、可高度定制的桌面体验。核心升级包括：为每个虚拟桌面提供灵活的平铺布局方案，强化窗口管理功能，以及经过重新设计的 Spectacle 截图工具，支持更便捷的屏幕截图与标注操作。无障碍功能优化了键盘导航，增强了对 Wayland 协议的支持。界面调整显著提升了对比度与可读性，这一改动对黑暗模式下尤为明显。通知系统新增直接安装更新选项、全屏免打扰模式及麦克风静音提醒功能。小组件现可突出显示新安装应用、媒体播放控制及磁盘修复工具。数字艺术家将受益于改进的触控笔配置和相对模式支持，系统对现代硬件的屏幕色彩管理与性能调度也更为出色。KRunner 新增色彩代码可视化功能，系统监视器加入了 GPU 状态追踪与传感器数据监测。其他优化还包括文件拖拽体验改进、浏览器深度集成，以及更完善的 Wayland...</description>
      <content:encoded>&lt;p&gt;六月，&lt;a href=&quot;https://get.opensuse.org/tumbleweed/&quot;&gt;openSUSE 滚动发行版&lt;/a&gt; 迎来了一系列全新更新。此次更新包含重大功能增强、性能优化以及多项关键安全修复。&lt;/p&gt;

&lt;p&gt;作为本次更新的核心亮点，&lt;a href=&quot;https://kde.org/announcements/plasma/6/6.4.0/&quot;&gt;KDE Plasma 6.4&lt;/a&gt; 与 &lt;a href=&quot;https://kde.org/announcements/frameworks/6/6.15.0/&quot;&gt;KDE Frameworks 6.15.0&lt;/a&gt; 及 &lt;a href=&quot;https://kde.org/announcements/changelogs/gear/25.04.2/&quot;&gt;KDE Gear 25.04.2&lt;/a&gt; 同步登场。Linux 内核迎来多轮升级，&lt;a href=&quot;https://gcc.gnu.org/&quot;&gt;GNU 编译器集合&lt;/a&gt; 15、&lt;a href=&quot;https://www.mesa3d.org/&quot;&gt;Mesa&lt;/a&gt; 25.1.3 和 &lt;a href=&quot;https://pipewire.org/&quot;&gt;PipeWire&lt;/a&gt; 1.4.6 等软件包则强化了对现代硬件的支持，提升了图形渲染能力并优化了音频处理性能。本月最关键的更新当属针对安全漏洞的修复措施。&lt;/p&gt;

&lt;p&gt;大量软件包在本月更新了重要的安全补丁。从 &lt;a href=&quot;https://gitlab.gnome.org/GNOME/libsoup.git&quot;&gt;libsoup&lt;/a&gt;、&lt;a href=&quot;https://www.mozilla.org/&quot;&gt;Mozilla Firefox&lt;/a&gt;、&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;、&lt;a href=&quot;https://www.libssh.org/&quot;&gt;libssh&lt;/a&gt;、&lt;a href=&quot;https://saltproject.io/&quot;&gt;Salt&lt;/a&gt; 到 &lt;a href=&quot;https://www.clamav.net/&quot;&gt;ClamAV&lt;/a&gt; 和 &lt;a href=&quot;https://gitlab.gnome.org/GNOME/gdm&quot;&gt;gdm&lt;/a&gt; 等组件，多个通用漏洞披露（CVE）问题得到解决，确保用户和开发者能够安心使用。&lt;/p&gt;

&lt;p&gt;同往常一样，如遇任何问题，请务必使用 &lt;a href=&quot;https://github.com/openSUSE/snapper&quot;&gt;snapper&lt;/a&gt; 工具进行系统回滚。&lt;/p&gt;

&lt;p&gt;欲了解本月完整更新日志，请访问 &lt;a href=&quot;https://lists.opensuse.org/archives/list/factory@lists.opensuse.org/&quot;&gt;openSUSE Factory 邮件列表&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;新功能和增强功能&quot;&gt;新功能和增强功能&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://kde.org/announcements/plasma/6/6.4.0/&quot;&gt;KDE Plasma 6.4&lt;/a&gt;&lt;/strong&gt;：此版本带来了更流畅、可高度定制的桌面体验。核心升级包括：为每个虚拟桌面提供灵活的平铺布局方案，强化窗口管理功能，以及经过重新设计的 &lt;a href=&quot;https://github.com/KDE/spectacle&quot;&gt;Spectacle&lt;/a&gt; 截图工具，支持更便捷的屏幕截图与标注操作。无障碍功能优化了键盘导航，增强了对 &lt;a href=&quot;https://wayland.freedesktop.org/&quot;&gt;Wayland&lt;/a&gt; 协议的支持。界面调整显著提升了对比度与可读性，这一改动对黑暗模式下尤为明显。通知系统新增直接安装更新选项、全屏免打扰模式及麦克风静音提醒功能。小组件现可突出显示新安装应用、媒体播放控制及磁盘修复工具。数字艺术家将受益于改进的触控笔配置和相对模式支持，系统对现代硬件的屏幕色彩管理与性能调度也更为出色。&lt;a href=&quot;https://userbase.kde.org/Plasma/Krunner/de&quot;&gt;KRunner&lt;/a&gt; 新增色彩代码可视化功能，系统监视器加入了 GPU 状态追踪与传感器数据监测。其他优化还包括文件拖拽体验改进、浏览器深度集成，以及更完善的 Wayland 协议支持。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://kde.org/announcements/frameworks/6/6.15.0/&quot;&gt;KDE Frameworks 6.15.0&lt;/a&gt;&lt;/strong&gt;：此版本的一大亮点是转向了 &lt;a href=&quot;https://doc.qt.io/qt-6/01-qdoc-manual.html&quot;&gt;QDoc&lt;/a&gt; ——这是一款更现代化、更清晰的文档工具，能够显著提升开发者在使用 &lt;a href=&quot;https://api.kde.org/frameworks/karchive/html/&quot;&gt;KArchive&lt;/a&gt;、&lt;a href=&quot;https://api.kde.org/frameworks/baloo/html/&quot;&gt;Baloo&lt;/a&gt; 和 &lt;a href=&quot;https://api.kde.org/frameworks/bluez-qt/html/&quot;&gt;Bluez Qt&lt;/a&gt; 等组件时的效率。此外，针对 &lt;a href=&quot;https://api.kde.org/frameworks/karchive/html/&quot;&gt;KArchive&lt;/a&gt; 和 &lt;a href=&quot;https://api.kde.org/frameworks/ktexteditor/html/&quot;&gt;KTextEditor&lt;/a&gt; 等模块的漏洞修复进一步增强了系统稳定性和性能。用户界面框架（如 &lt;a href=&quot;https://api.kde.org/frameworks/kwidgetsaddons/html/&quot;&gt;KWidgetsAddons&lt;/a&gt; 和 &lt;a href=&quot;https://api.kde.org/frameworks/kirigami/html/index.html&quot;&gt;Kirigami&lt;/a&gt;）在视觉效果和功能上均有优化，同时无障碍特性也得到加强。&lt;a href=&quot;https://kate-editor.org/&quot;&gt;Kate&lt;/a&gt; 和 &lt;a href=&quot;https://apps.kde.org/kwrite/&quot;&gt;KWrite&lt;/a&gt; 等 KDE 文本编辑器的用户会发现更新还加强了对 Cap’n Proto 和 FreeFem 等不同编程语言的语法支持，让代码编写更加流畅。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://kde.org/announcements/changelogs/gear/25.04.2/&quot;&gt;KDE Gear 25.04.2&lt;/a&gt;&lt;/strong&gt;：此次更新为 &lt;a href=&quot;https://kdenlive.org/en/&quot;&gt;Kdenlive&lt;/a&gt; 带来了多项问题修复，包括渐变、直方图及渲染相关问题的解决，大幅提升了视频编辑的稳定性。&lt;a href=&quot;https://apps.kde.org/neochat/&quot;&gt;NeoChat&lt;/a&gt; 增强了移动端支持，优化了空间切换和聊天室管理体验。&lt;a href=&quot;https://apps.kde.org/calligra/&quot;&gt;Calligra&lt;/a&gt; 改进了公式处理机制，避免了程序崩溃问题，而 &lt;a href=&quot;https://userbase.kde.org/Akonadi&quot;&gt;Akonadi&lt;/a&gt; 现在能够正确执行标签编辑与删除操作。此外，&lt;a href=&quot;https://kdeconnect.kde.org/&quot;&gt;KDE Connect&lt;/a&gt; 提升了与 &lt;a href=&quot;https://www.qt.io/&quot;&gt;Qt&lt;/a&gt; 6.9 的兼容性，终端应用 &lt;a href=&quot;https://konsole.kde.org/&quot;&gt;Konsole&lt;/a&gt; 也获得了多项问题修复，整体运行更加可靠。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://ceph.io/&quot;&gt;Ceph&lt;/a&gt; 18.2.7&lt;/strong&gt;：本次重大更新包含多项架构变更、性能优化与新功能。最显著的变化是正式弃用 FileStore，标志着所有新部署将全面转向 &lt;a href=&quot;https://docs.ceph.com/en/latest/rados/configuration/storage-devices/&quot;&gt;BlueStore&lt;/a&gt;。&lt;a href=&quot;https://docs.ceph.com/en/reef/man/8/rados/&quot;&gt;RADOS&lt;/a&gt; 模块获得多项增强，包括引入读取均衡器功能，并弃用缓存分层技术，转而采用更现代的存储策略。原性能统计命令 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;perf dump&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;perf schema&lt;/code&gt; 已被替换为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;counter dump&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;counter schema&lt;/code&gt;，以提供更完善的计数器管理机制。其他更新包括 IPv6 s问题修复、编排器稳定性提升，以及针对 mgr 模块的 Python 绑定补丁更新。此版本还禁用了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ceph-mgr-cephadm&lt;/code&gt; 组件，并包含一系列构建与兼容性补丁，确保与现代工具链及 Python 版本的平滑集成。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://apps.gnome.org/zh-CN/Music/&quot;&gt;python-psutil&lt;/a&gt; 7.0.0&lt;/strong&gt;：本次重大更新包含一些重要变更：已正式停止对 Python 2.7 的支持，这与更广泛的生态系统转变保持一致。修复了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Process.memory_maps()&lt;/code&gt; 在内存使用量极高时导致的崩溃问题，提高了处理数百 GB 内存进程的稳定性。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://pypi.org/project/rich/&quot;&gt;python-rich&lt;/a&gt; 14.0.0&lt;/strong&gt;：本次重大版本更新引入了多项影响终端输出和错误处理的新功能与行为变更。最显著的改进是新增了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TTY_COMPATIBLE&lt;/code&gt; 环境变量，允许用户手动控制 TTY 支持检测功能，这在自动检测可能失败的无界面或特殊终端环境中尤为实用。重要变更包括 Rich 对颜色控制变量的解析方式调整，以及现在会显示通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Exception.add_note()&lt;/code&gt; 添加的异常备注信息，从而提升调试时的信息清晰度。&lt;/p&gt;

&lt;h2 id=&quot;关键软件包更新&quot;&gt;关键软件包更新&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://webkitgtk.org/&quot;&gt;webkit2gtk3&lt;/a&gt; 2.48.3&lt;/strong&gt;：本次更新为基于 &lt;a href=&quot;https://www.gtk.org/&quot;&gt;GTK&lt;/a&gt; 的网页应用及浏览器（如 &lt;a href=&quot;https://apps.gnome.org/Epiphany/&quot;&gt;Epiphany&lt;/a&gt;）带来了稳定性和性能提升。主要修复了采用 Skia 图形 &lt;a href=&quot;https://en.wikipedia.org/wiki/API&quot;&gt;API&lt;/a&gt; 的新线程渲染系统引发的崩溃问题，近期遭遇渲染不稳定的用户将体验到明显改善。通过优化跨工作线程处理脏区的方式，渲染性能得到进一步调优，从而实现更流畅的视觉效果并降低 CPU 占用率脏区指屏幕或界面中发生变化需要重绘的区域。此次更新全面增强了 &lt;a href=&quot;https://www.gnome.org/&quot;&gt;GNOME&lt;/a&gt; 及其他 GTK 环境下 WebKit 应用程序的可用性与可靠性。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; 3.13.5&lt;/strong&gt;：本次更新提供了安全修复和稳定性改进。重要变更包括修复了与 tar 文件解压漏洞相关的 CVE 漏洞，修正了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unicode-escape&lt;/code&gt; 解码器中的内存释放后继续使用的安全漏洞，并恢复了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;random.getrandbits()&lt;/code&gt; 对类整数对象的正确处理行为。库更新改进了对 IPv6 地址、邮件解析和 zip 文件操作的处理。为确保向后兼容性，已回退 3.13.4 版本中的部分生成器相关改动。建议所有用户升级以确保安全性和稳定性。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://git.kernel.org/pub/scm/network/iproute2/iproute2.git&quot;&gt;iproute2&lt;/a&gt; 6.15&lt;/strong&gt;：本次更新新增了对 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tc_util&lt;/code&gt; 中 64 位硬件数据包计数器的支持，可更精准监控超过 32 位限制的高吞吐量接口。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iprule&lt;/code&gt; 工具现在支持使用十六进制表示法指定端口号，提升了处理底层网络协议和掩码时的兼容性与可读性。所有从旧版本反向移植的补丁均已被移除，转而采用上游纯净代码。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.kernel.org/&quot;&gt;kernel-source&lt;/a&gt; 6.15.0 和 6.15.3&lt;/strong&gt;：6.15.3修复了一个 PCIe 热插拔问题，其中延迟到达的设备检测信号（存在检测变更）导致不必要的错误。它还改进了 I/O 调度中后台任务的处理方式，并解决了 WiFi 驱动兼容性的回归问题。该更新修复了目标电源管理、加密操作和文件系统处理（包括 btrfs 和 gfs2），以提高数据完整性和性能。6.15.0 内核撤销了“x86/smp: Eliminate mwait_play_dead_cpuid_hint()”提交以解决稳定性问题，并增加了对 &lt;a href=&quot;https://www.hotmcu.com/&quot;&gt;HAOYU（昊昱）微电子&lt;/a&gt; HYM8563 RTC 模块的支持，该模块广泛用于Rockchip SoC 等 ARM64 平台。整合了多个补丁以改进 ACPI 构建处理，并从 6.14.8 更新中继承了许多关键错误修复，特别是在内存管理、DMA 引擎处理和 I/O 子系统方面，提高了复杂工作负载下的可靠性，并减少了错误路径中的内存泄漏。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://gcc.gnu.org/&quot;&gt;gcc&lt;/a&gt; 15&lt;/strong&gt;：本次更新引入了新的语言支持，新增了 Modula-2 和 Cobol 软件包，进一步扩展了其本就广泛的编程语言支持范围。主工具链现已默认采用 GCC 15，而 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-build&lt;/code&gt; 版本仍保留为 13 版，以确保需要稳定编译器后端的环境的兼容性和可靠性。该版本还包含性能提升、更完善的诊断功能以及增强的卸载支持，因此推荐开发者升级。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;&quot;&gt;fwupd&lt;/a&gt; 2.0.12&lt;/strong&gt;：本次更新新增了对 &lt;a href=&quot;https://www.hp.com/&quot;&gt;HP&lt;/a&gt; 便携式 USB-C 集线器、更多 &lt;a href=&quot;https://www.honhai.com/&quot;&gt;Foxconn&lt;/a&gt; 5G 调制解调器以及 &lt;a href=&quot;https://www.intel.com/&quot;&gt;Intel&lt;/a&gt; Arc Battlemage 显卡的支持。新功能包括 Thunderbolt 主机控制器模拟、强制执行不可变设备枚举，并改进了 UEFI 安全启动变量的处理。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.mesa3d.org/&quot;&gt;Mesa&lt;/a&gt; 25.1.3&lt;/strong&gt;：该版本的主要变更包括修复了&lt;a href=&quot;https://store.steampowered.com/app/3017860/DOOM_The_Dark_Ages/&quot;&gt;《DOOM：黑暗时代》&lt;/a&gt; 等游戏的渲染问题，并改进了 Vulkan 和 OpenGL 实现的驱动程序行为。由于 EGL 无表面上下文已能完全替代其功能，本次更新移除了对 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osmesa&lt;/code&gt; 的支持。此外还更新或移除了多个补丁，包括构建修复、SPIR-V 转换以及 Clover OpenCL 处理等方面的调整。&lt;/p&gt;

&lt;p&gt;**&lt;a href=&quot;https://gnupg.org/&quot;&gt;gpg2&lt;/a&gt; 2.5.8：本次版本的主要改进包括现在能直接在标准密钥列表（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-k&lt;/code&gt;）中显示吊销原因，无需额外查询即可轻松追踪密钥被吊销的原因。更新还通过在“pub”记录中以注释形式输出吊销原因，提升了与外部工具的互操作性，并改进了对解析 GnuPG 密钥输出的系统的兼容性。修复了两个关键问题：一个影响解密功能，另一个影响从智能卡导出 SSH 密钥。此外，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg --fetch-key&lt;/code&gt; 命令现在不再需要预先配置密钥服务器，允许直接从 URL 或本地文件获取密钥，从而简化了密钥管理的工作流程。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://gitlab.com/cryptsetup/cryptsetup&quot;&gt;cryptsetup&lt;/a&gt; 2.8.0&lt;/strong&gt;：本次更新的核心改进是通过支持带有额外元数据空间的硬件扇区来提升性能。所有密钥槽类型现在都实现了自包含设计，并通过新增的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--key-description&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--new-key-description&lt;/code&gt; 等选项优化了重加密流程，同时支持使用令牌或卷密钥恢复重加密操作。该版本还改进了 LUKS2 中Argon2 KDF（密钥派生函数）的内存处理机制，增强了低内存场景下的错误报告能力。此外优化了 LUKS2 的元数据写入性能，并通过新增 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--error-as-corruption&lt;/code&gt; 等选项扩展了 veritysetup 的功能。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;&quot;&gt;pipewire&lt;/a&gt; 1.4.6&lt;/strong&gt;：本次更新修复了 filter-chain（过滤器链）和 ALSA（高级Linux声音架构）插件中的崩溃问题。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-combine-stream&lt;/code&gt;（组合流模块）的延迟报告功能得到改进，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-filter-chain&lt;/code&gt;（过滤器链模块）现在能更好地处理激活和停用操作以避免崩溃。新增的选项允许用户通过上下文属性禁用 RAOP（远程音频输出协议），从而提供更灵活的音频路由控制。&lt;/p&gt;

&lt;h2 id=&quot;错误修复和安全更新&quot;&gt;错误修复和安全更新&lt;/h2&gt;
&lt;p&gt;本月修复了多个关键安全漏洞，涉及的 &lt;a href=&quot;https://zh.wikipedia.org/wiki/公共漏洞和暴露&quot;&gt;通用漏洞披露问题&lt;/a&gt; 包括：&lt;/p&gt;

&lt;h3 id=&quot;安全更新&quot;&gt;安全更新&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://gitlab.gnome.org/GNOME/libsoup&quot;&gt;libsoup&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-32911.html&quot;&gt;CVE-2025-32911&lt;/a&gt;&lt;/strong&gt;：修复了 libsoup 分块传输解析器中的缓冲区越界读取漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-32910.html&quot;&gt;CVE-2025-32910&lt;/a&gt;&lt;/strong&gt;：解决了 libsoup 头部解析时的越界访问问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-32906.html&quot;&gt;CVE-2025-32906&lt;/a&gt;&lt;/strong&gt;：修补了 libsoup cookie 处理中的验证不足缺陷&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-32912.html&quot;&gt;CVE-2025-32912&lt;/a&gt;&lt;/strong&gt;：修复了 libsoup 中 HTTP/2 会话劫持漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-32909.html&quot;&gt;CVE-2025-32909&lt;/a&gt;&lt;/strong&gt;：修复了 libsoup 多部分解析器的内存泄漏问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4948.html&quot;&gt;CVE-2025-4948&lt;/a&gt;&lt;/strong&gt;：修复了 libcurl 中 wolfSSL QUIC SSL 对端验证绕过漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4969.html&quot;&gt;CVE-2025-4969&lt;/a&gt;&lt;/strong&gt;：修补了 libcurl &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dynbuf&lt;/code&gt; API 的缓冲区溢出漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4945.html&quot;&gt;CVE-2025-4945&lt;/a&gt;&lt;/strong&gt;：修复了 Linux 内核 USB 子系统的越界读取漏洞（可能导致信息泄露）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.mozilla.org/zh-CN/&quot;&gt;Mozilla Firefox&lt;/a&gt; 139&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5263.html&quot;&gt;CVE-2025-5263&lt;/a&gt;&lt;/strong&gt;：修复了 Firefox 中跨源脚本执行泄露漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5264.html&quot;&gt;CVE-2025-5264&lt;/a&gt;&lt;/strong&gt;：修复了“复制为 cURL”功能中换行转义缺陷（可导致代码执行）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5265.html&quot;&gt;CVE-2025-5265&lt;/a&gt;&lt;/strong&gt;：修补了 Firefox 中类似的“复制为 cURL”代码执行漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5266.html&quot;&gt;CVE-2025-5266&lt;/a&gt;&lt;/strong&gt;：修复了跨源脚本元素的事件泄露问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5267.html&quot;&gt;CVE-2025-5267&lt;/a&gt;&lt;/strong&gt;：修复了点击劫持漏洞（可能泄露已保存的支付卡信息）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5268.html&quot;&gt;CVE-2025-5268&lt;/a&gt;&lt;/strong&gt;：解决了 Firefox/Thunderbird 中的多个内存安全问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5270.html&quot;&gt;CVE-2025-5270&lt;/a&gt;&lt;/strong&gt;：[预留编号：详情待公开披露]&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5271.html&quot;&gt;CVE-2025-5271&lt;/a&gt;&lt;/strong&gt;：[预留编号：详情待公开披露]&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5272.html&quot;&gt;CVE-2025-5272&lt;/a&gt;&lt;/strong&gt;：[预留编号：详情待公开披露]&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49709.html&quot;&gt;CVE-2025-49709&lt;/a&gt;&lt;/strong&gt;：修补了画布表面的内存损坏漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49710.html&quot;&gt;CVE-2025-49710&lt;/a&gt;&lt;/strong&gt;：修复了 Firefox 139.0.4 中未明确说明的内存安全问题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.python.org/&quot;&gt;python313&lt;/a&gt; 3.13.5&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2024-12718.html&quot;&gt;CVE-2024-12718&lt;/a&gt;&lt;/strong&gt;：修复了 Python 3.12+ 中 tarfile 过滤器的漏洞（允许在解压目录外更改元数据或权限）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4138.html&quot;&gt;CVE-2025-4138&lt;/a&gt;&lt;/strong&gt;：修复了 libarchive ZIP 过滤器处理中的缓冲区溢出问题（可能导致内存损坏）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4330.html&quot;&gt;CVE-2025-4330&lt;/a&gt;&lt;/strong&gt;：修补了 SQLite JSON 扩展在解析无效 JSON 输入时的越界读取漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4517.html&quot;&gt;CVE-2025-4517&lt;/a&gt;&lt;/strong&gt;：解决了 OpenSSL 会话缓存中的竞态条件问题（可能导致释放后使用场景）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4516.html&quot;&gt;CVE-2025-4516&lt;/a&gt;&lt;/strong&gt;：修复了 CPython 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bytes.decode(&quot;unicode_escape&quot;, errors=&quot;ignore|replace&quot;)&lt;/code&gt; 中的释放后使用问题（防止内存损坏）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.python.org/&quot;&gt;python311&lt;/a&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4516.html&quot;&gt;CVE-2025-4516&lt;/a&gt;&lt;/strong&gt;：修复了 CPython 中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bytes.decode(&quot;unicode_escape&quot;, errors=&quot;ignore|replace&quot;)&lt;/code&gt; 方法的释放后使用（use-after-free）漏洞（可能导致内存损坏）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.libssh.org/&quot;&gt;libssh&lt;/a&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4877.html&quot;&gt;CVE-2025-4877&lt;/a&gt;&lt;/strong&gt;：修复了二进制转 Base64 转换函数中的越界写入问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-4878.html&quot;&gt;CVE-2025-4878&lt;/a&gt;&lt;/strong&gt;：修复了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;privatekey_from_file()&lt;/code&gt; 函数中使用未初始化变量的问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5318.html&quot;&gt;CVE-2025-5318&lt;/a&gt;&lt;/strong&gt;：修复了 SFTP 服务器句柄管理中可能存在的越界读取漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5351.html&quot;&gt;CVE-2025-5351&lt;/a&gt;&lt;/strong&gt;：修复了密钥导出函数中的双重释放漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5372.html&quot;&gt;CVE-2025-5372&lt;/a&gt;&lt;/strong&gt;：修复了 ssh_kdf() 函数在某些失败情况下仍返回成功代码的问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5449.html&quot;&gt;CVE-2025-5449&lt;/a&gt;&lt;/strong&gt;：修复了 SFTP 服务器消息解码中可能存在的越界读取漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-5987.html&quot;&gt;CVE-2025-5987&lt;/a&gt;&lt;/strong&gt;：修复了使用 OpenSSL 后端时 ChaCha20-Poly1305 算法返回无效返回码的问题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://saltproject.io/&quot;&gt;Salt&lt;/a&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2024-38822.html&quot;&gt;CVE-2024-38822&lt;/a&gt;&lt;/strong&gt;：修复了 Salt 文件客户端功能中的不当访问控制问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2024-38823.html&quot;&gt;CVE-2024-38823&lt;/a&gt;&lt;/strong&gt;：解决了来自不可信 pillar 数据的命令注入风险&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2024-38824.html&quot;&gt;CVE-2024-38824&lt;/a&gt;&lt;/strong&gt;：修补了 Salt 事件系统中的不安全反序列化漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2024-38825.html&quot;&gt;CVE-2024-38825&lt;/a&gt;&lt;/strong&gt;：修复了因路径清理不当导致的目录遍历漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-22240.html&quot;&gt;CVE-2025-22240&lt;/a&gt;&lt;/strong&gt;：修复了通过特制 Salt minion 返回导致的远程命令执行漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-22236.html&quot;&gt;CVE-2025-22236&lt;/a&gt;&lt;/strong&gt;：修复了特定条件下 Salt minion 可能覆盖非预期文件的问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-22241.html&quot;&gt;CVE-2025-22241&lt;/a&gt;&lt;/strong&gt;：解决了畸形 Salt 返回负载导致的拒绝服务问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-22237.html&quot;&gt;CVE-2025-22237&lt;/a&gt;&lt;/strong&gt;：修复了 Salt master 日志记录敏感返回数据的问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-22238.html&quot;&gt;CVE-2025-22238&lt;/a&gt;&lt;/strong&gt;：修补了调试日志中 minion 密钥泄露的问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-22239.html&quot;&gt;CVE-2025-22239&lt;/a&gt;&lt;/strong&gt;：解决了 ACL 配置不当导致的权限提升问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-22242.html&quot;&gt;CVE-2025-22242&lt;/a&gt;&lt;/strong&gt;：修复了 Salt SSH 模块中的输入验证问题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.x.org/wiki/&quot;&gt;xorg-x11-server&lt;/a&gt;&lt;/strong&gt;：
以下是按照要求的格式翻译和排版的漏洞公告：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49176.html&quot;&gt;CVE-2025-49176&lt;/a&gt;&lt;/strong&gt;：修复了 xorg-x11-server 中绕过大小检查的整数溢出漏洞&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/stefanberger/libtpms&quot;&gt;libtpms&lt;/a&gt; 0.10.1&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49133.html&quot;&gt;CVE-2025-49133&lt;/a&gt;&lt;/strong&gt;：修复了 libtpms 0.10.1 中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CryptHmacSign&lt;/code&gt; 函数的越界读取漏洞（可能通过恶意 TPM 2.0/vTPM 命令触发，导致服务中断）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.clamav.net/&quot;&gt;ClamAV&lt;/a&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-20260.html&quot;&gt;CVE-2025-20260&lt;/a&gt;&lt;/strong&gt;：修复了 ClamAV PDF 解析器缓冲区溢出漏洞（在扫描限制大的情况下可能导致拒绝服务或远程代码执行）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-20234.html&quot;&gt;CVE-2025-20234&lt;/a&gt;&lt;/strong&gt;：修复了 ClamAV UDF 解析器缓冲区溢出漏洞（可能导致数据泄露或拒绝服务）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://gitlab.gnome.org/GNOME/gdm&quot;&gt;gdm&lt;/a&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-6018.html&quot;&gt;CVE-2025-6018&lt;/a&gt;&lt;/strong&gt;：修复了身份认证栈中使用 pam_env 模块导致的安全风险&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/OpenSC/pam_pkcs11&quot;&gt;pam_pkcs11&lt;/a&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-6018.html&quot;&gt;CVE-2025-6018&lt;/a&gt;&lt;/strong&gt;：修复了与 gdm 相同的身份认证栈中 pam_env 模块使用问题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://jqlang.org/&quot;&gt;jq&lt;/a&gt;&lt;/strong&gt; 1.8.0：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2024-23337.html&quot;&gt;CVE-2024-23337&lt;/a&gt;&lt;/strong&gt;：修复了 jvp_array_write 和 jvp_object_rehash 函数中的有符号整数溢出漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2024-53427.html&quot;&gt;CVE-2024-53427&lt;/a&gt;&lt;/strong&gt;：修复了 JSON 解析时接受含有效载荷 NaN 值的问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-48060.html&quot;&gt;CVE-2025-48060&lt;/a&gt;&lt;/strong&gt;：修复了 jv_string_vfmt 函数中的堆缓冲区溢出漏洞&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/linux-pam/linux-pam&quot;&gt;pam&lt;/a&gt; 1.7.1&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2024-10963.html&quot;&gt;CVE-2024-10963&lt;/a&gt;&lt;/strong&gt;：修复了 pam_access 模块将显示令牌错误解析为主机名的问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-6020.html&quot;&gt;CVE-2025-6020&lt;/a&gt;&lt;/strong&gt;：修复了 pam_namespace 模块中的权限提升漏洞&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;&quot;&gt;xwayland&lt;/a&gt; 24.1.7&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49175.html&quot;&gt;CVE-2025-49175&lt;/a&gt;&lt;/strong&gt;：修复了 X Rendering 扩展中与动画光标相关的越界访问问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49176.html&quot;&gt;CVE-2025-49176&lt;/a&gt;&lt;/strong&gt;：修复了 Big Requests 扩展中的整数溢出漏洞&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49177.html&quot;&gt;CVE-2025-49177&lt;/a&gt;&lt;/strong&gt;：修复了 XFIXES 扩展中可能导致数据泄露的问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49178.html&quot;&gt;CVE-2025-49178&lt;/a&gt;&lt;/strong&gt;：确保正确处理输入缓冲区中应忽略的字节&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49179.html&quot;&gt;CVE-2025-49179&lt;/a&gt;&lt;/strong&gt;：修复了 X Record 扩展中的整数溢出问题&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-49180.html&quot;&gt;CVE-2025-49180&lt;/a&gt;&lt;/strong&gt;：修复了 RandR 扩展中的整数溢出漏洞，防止可能的崩溃或内存损坏&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://apps.gnome.org/Yelp/&quot;&gt;yelp&lt;/a&gt; 42.3&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-3155.html&quot;&gt;CVE-2025-3155&lt;/a&gt;&lt;/strong&gt;：修复了 Yelp 帮助查看器中的 JavaScript 执行漏洞（攻击者可通过特制帮助文档实现任意文件读取）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://software.opensuse.org/package/perl-CryptX&quot;&gt;perl-CryptX&lt;/a&gt; 0.87.0&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-40914.html&quot;&gt;CVE-2025-40914&lt;/a&gt;&lt;/strong&gt;：修复了 CryptX 中嵌入的易受整数溢出漏洞影响的 libtommath 库版本&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://wiki.gnome.org/Projects/GLib&quot;&gt;glib2&lt;/a&gt; 2.84.3&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.suse.com/security/cve/CVE-2025-6052.html&quot;&gt;CVE-2025-6052&lt;/a&gt;&lt;/strong&gt;：修复了 GLib 中 GString 扩展函数（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;g_string_maybe_expand&lt;/code&gt;）的整数溢出漏洞，可防止潜在的缓冲区溢出&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;建议用户尽快更新至最新版本以防范上述安全风险。&lt;/p&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;六月份包含了多项漏洞修复和固件更新，其中固件包已升级至 20250613 版本。本次更新包含对高通、联发科、瑞昱和 Cirrus 音频芯片的改进，同时升级了蓝牙固件并优化了符号链接处理。Xfce 面板插件（包括 mailwatch、mount、mpc、netload、notes、places 和 sensors）也更新至新版本，这些软件包更新主要涉及将构建系统迁移至 Meson、用 libxfce4ui 4.21.0 替换已弃用的 Exo 等依赖项、自动化版权管理、改进代码结构、修复构建警告以及更新翻译文件。安全是本月更新的重点，Firefox、Python、Salt、ClamAV 和 libssh 等组件均修复了关键漏洞。请享受更新！&lt;/p&gt;

&lt;h2 id=&quot;slowroll-的更新&quot;&gt;Slowroll 的更新&lt;/h2&gt;

&lt;p&gt;请注意，上述更新同样适用于 &lt;a href=&quot;https://en.opensuse.org/Archive:Old_Slowroll_Page&quot;&gt;Slowroll&lt;/a&gt; 发行版，通常会在 Tumbleweed 快照发布后的 5 至 10 天 内推送。这一月度同步机制已稳定运行数月，能确保用户在获得可靠性的同时，也能及时接收功能与安全增强。Slowroll 的更新包会定期通过 &lt;a href=&quot;https://lists.opensuse.org/archives/list/factory@lists.opensuse.org/&quot;&gt;openSUSE Factory 邮件列表&lt;/a&gt; 发布公告。&lt;/p&gt;

&lt;h2 id=&quot;为-opensuse-tumbleweed-做贡献&quot;&gt;为 openSUSE Tumbleweed 做贡献&lt;/h2&gt;

&lt;p&gt;您可以通过订阅 &lt;a href=&quot;https://lists.opensuse.org/archives/list/factory@lists.opensuse.org/&quot;&gt;openSUSE Factory 邮件列表&lt;/a&gt; 获取最新的快照更新信息。如果您希望参与贡献或深入技术讨论，该邮件列表是交流的核心平台。openSUSE 团队欢迎用户通过以下方式参与，包括提交错误报告、提出功能建议、参与社区讨论。&lt;/p&gt;

&lt;p&gt;您的每一次反馈和贡献，都在帮助 Tumbleweed 变得更好。无论是报告错误、提出功能建议，还是参与社区讨论，您的参与都极具价值。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/07/03/tw-monthly-update-june/&quot;&gt;Tumbleweed Monthly Update - June 2025&lt;/a&gt;，作者：Douglas DeMaio&lt;/p&gt;
</content:encoded>
    </item>

    <item>
      <guid>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/06/30/llvm.html</guid>
      <title>SUSE 优化并发布开源大语言模型，助力社区协作发展</title>
      <pubDate>Mon, 30 Jun 2025 01:30:00 +0000</pubDate>
      <link>/%E7%A4%BE%E5%8C%BA%E6%96%B0%E9%97%BB/2025/06/30/llvm.html</link>
      <author>Fangzhou Liu</author>
      <description>6 月 24 日，SUSE 在 openSUSE 的 Hugging Face 平台 上开源发布了新版精调的语言模型 Cavil-Qwen3-4B，旨在让开源生态中的开发者能够更便捷地实现法律合规自动化。 该版本基于出色的 Qwen3-4B 基础模型 构建，并采用 LoRA 适配器（低秩自适应）技术，用于检测代码和文档中与法律相关的文本（如许可证声明）。该模型源自 openSUSE 的合规工具 Cavil，该工具提供透明且可协作的开源法律解决方案。 这款 40 亿参数的模型在性能和可部署性之间实现了出色平衡——既能提供强大的语言理解能力，又可兼容消费级 GPU 硬件。所有 Qwen3 衍生模型均采用 OSI 认证的 Apache 2.0 开源协议，只要满足许可要求即可用于商业场景和二次分发。 “该模型将企业级的法律文本识别能力带给了更广大的开发者群体，”项目贡献者塞巴斯蒂安·里德尔表示，“对于任何希望规避合规风险又不想配置重型基础设施的项目来说，这都是个实用工具。” 该项目的训练方法采用了包含 15 万样本的数据集和 Alpaca 指令格式，使模型能够准确识别许可证声明头及类似法律文本。经与多个开源模型对比测试，Cavil-Qwen3-4B 展现出高准确度，并支持量化选项以便在小型设备上高效运行。 用于训练该模型的数据集和验证工具也将通过 Hugging Face 平台公开，以便研究者和开发者能够复现并拓展这项工作。 开发团队诚邀持续反馈与贡献。我们鼓励开发者使用该模型并通过 Hugging Face 平台 分享见解、提出改进建议或参与协作。访问地址：huggingface.co/openSUSE。开发者也可通过 openSUSE...</description>
      <content:encoded>&lt;p&gt;6 月 24 日，&lt;a href=&quot;https://www.suse.com/&quot;&gt;SUSE&lt;/a&gt; 在 &lt;a href=&quot;https://huggingface.co/openSUSE/&quot;&gt;openSUSE 的 Hugging Face 平台&lt;/a&gt; 上开源发布了新版精调的语言模型 &lt;a href=&quot;https://huggingface.co/openSUSE/Cavil-Qwen3-4B&quot;&gt;Cavil-Qwen3-4B&lt;/a&gt;，旨在让开源生态中的开发者能够更便捷地实现法律合规自动化。&lt;/p&gt;

&lt;p&gt;该版本基于出色的 &lt;a href=&quot;https://huggingface.co/Qwen/Qwen3-4B&quot;&gt;Qwen3-4B 基础模型&lt;/a&gt; 构建，并采用 LoRA 适配器（低秩自适应）技术，用于检测代码和文档中与法律相关的文本（如许可证声明）。该模型源自 openSUSE 的合规工具 &lt;a href=&quot;https://github.com/openSUSE/cavil&quot;&gt;Cavil&lt;/a&gt;，该工具提供透明且可协作的开源法律解决方案。&lt;/p&gt;

&lt;p&gt;这款 40 亿参数的模型在性能和可部署性之间实现了出色平衡——既能提供强大的语言理解能力，又可兼容消费级 GPU 硬件。所有 Qwen3 衍生模型均采用 OSI 认证的 &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache 2.0 开源协议&lt;/a&gt;，只要满足许可要求即可用于商业场景和二次分发。&lt;/p&gt;

&lt;p&gt;“该模型将企业级的法律文本识别能力带给了更广大的开发者群体，”项目贡献者塞巴斯蒂安·里德尔表示，“对于任何希望规避合规风险又不想配置重型基础设施的项目来说，这都是个实用工具。”&lt;/p&gt;

&lt;p&gt;该项目的训练方法采用了包含 15 万样本的数据集和 Alpaca 指令格式，使模型能够准确识别许可证声明头及类似法律文本。经与多个开源模型对比测试，Cavil-Qwen3-4B 展现出高准确度，并支持量化选项以便在小型设备上高效运行。&lt;/p&gt;

&lt;p&gt;用于训练该模型的数据集和验证工具也将通过 Hugging Face 平台公开，以便研究者和开发者能够复现并拓展这项工作。&lt;/p&gt;

&lt;p&gt;开发团队诚邀持续反馈与贡献。我们鼓励开发者使用该模型并通过 &lt;a href=&quot;https://huggingface.co/openSUSE/&quot;&gt;Hugging Face 平台&lt;/a&gt; 分享见解、提出改进建议或参与协作。访问地址：&lt;a href=&quot;https://huggingface.co/openSUSE/&quot;&gt;huggingface.co/openSUSE&lt;/a&gt;。开发者也可通过 &lt;a href=&quot;https://lists.opensuse.org/&quot;&gt;openSUSE Factory 邮件列表&lt;/a&gt; 联系我们。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://news.opensuse.org/2025/06/24/suse-refines-releases-os-llm-to-fuel-community-collaboration/&quot;&gt;SUSE Refines, Releases Open-Source LLM to Fuel Community Collaboration&lt;/a&gt;，作者：Douglas DeMaio&lt;/p&gt;
</content:encoded>
    </item>

  </channel>
</rss>
